var search_data = {
    'index': {
        'searchIndex': ["icecave","icecave\\siphon","icecave\\siphon\\atom","icecave\\siphon\\exception","icecave\\siphon\\schedule","icecave\\siphon\\score","icecave\\siphon\\score\\livescore","icecave\\siphon\\team","icecave\\siphon\\atom\\atomentry","icecave\\siphon\\atom\\atomreader","icecave\\siphon\\atom\\atomreaderinterface","icecave\\siphon\\atom\\atomresult","icecave\\siphon\\exception\\serviceunavailableexception","icecave\\siphon\\packageinfo","icecave\\siphon\\schedule\\competition","icecave\\siphon\\schedule\\competitionstatus","icecave\\siphon\\schedule\\schedule","icecave\\siphon\\schedule\\schedulereader","icecave\\siphon\\schedule\\schedulereaderinterface","icecave\\siphon\\schedule\\season","icecave\\siphon\\score\\innings","icecave\\siphon\\score\\inningsscore","icecave\\siphon\\score\\inningsstatisticsinterface","icecave\\siphon\\score\\inningstype","icecave\\siphon\\score\\livescore\\gametimeinterface","icecave\\siphon\\score\\livescore\\inningslivescore","icecave\\siphon\\score\\livescore\\inningslivescorefactory","icecave\\siphon\\score\\livescore\\livescorefactoryinterface","icecave\\siphon\\score\\livescore\\livescoreinterface","icecave\\siphon\\score\\livescore\\livescorereader","icecave\\siphon\\score\\livescore\\livescorereaderinterface","icecave\\siphon\\score\\livescore\\periodlivescore","icecave\\siphon\\score\\livescore\\periodlivescorefactory","icecave\\siphon\\score\\livescore\\statisticsaggregator","icecave\\siphon\\score\\livescore\\statisticsaggregatorinterface","icecave\\siphon\\score\\period","icecave\\siphon\\score\\periodscore","icecave\\siphon\\score\\periodtype","icecave\\siphon\\score\\scopeinterface","icecave\\siphon\\score\\scopestatus","icecave\\siphon\\score\\scoreinterface","icecave\\siphon\\score\\scorereaderinterface","icecave\\siphon\\team\\team","icecave\\siphon\\team\\teamreader","icecave\\siphon\\team\\teamreaderinterface","icecave\\siphon\\urlbuilder","icecave\\siphon\\urlbuilderinterface","icecave\\siphon\\xmlreader","icecave\\siphon\\xmlreaderinterface","icecave\\siphon\\atom\\atomentry::__construct","icecave\\siphon\\atom\\atomentry::url","icecave\\siphon\\atom\\atomentry::updatedtime","icecave\\siphon\\atom\\atomreader::__construct","icecave\\siphon\\atom\\atomreader::read","icecave\\siphon\\atom\\atomreaderinterface::read","icecave\\siphon\\atom\\atomresult::__construct","icecave\\siphon\\atom\\atomresult::add","icecave\\siphon\\atom\\atomresult::isempty","icecave\\siphon\\atom\\atomresult::count","icecave\\siphon\\atom\\atomresult::getiterator","icecave\\siphon\\atom\\atomresult::updatedtime","icecave\\siphon\\schedule\\competition::__construct","icecave\\siphon\\schedule\\competition::id","icecave\\siphon\\schedule\\competition::status","icecave\\siphon\\schedule\\competition::starttime","icecave\\siphon\\schedule\\competition::sport","icecave\\siphon\\schedule\\competition::league","icecave\\siphon\\schedule\\competition::hometeamid","icecave\\siphon\\schedule\\competition::awayteamid","icecave\\siphon\\schedule\\schedule::add","icecave\\siphon\\schedule\\schedule::seasons","icecave\\siphon\\schedule\\schedule::competitions","icecave\\siphon\\schedule\\schedulereader::__construct","icecave\\siphon\\schedule\\schedulereader::read","icecave\\siphon\\schedule\\schedulereaderinterface::read","icecave\\siphon\\schedule\\season::__construct","icecave\\siphon\\schedule\\season::id","icecave\\siphon\\schedule\\season::name","icecave\\siphon\\schedule\\season::startdate","icecave\\siphon\\schedule\\season::enddate","icecave\\siphon\\schedule\\season::add","icecave\\siphon\\schedule\\season::competitions","icecave\\siphon\\score\\innings::__construct","icecave\\siphon\\score\\innings::status","icecave\\siphon\\score\\innings::setstatus","icecave\\siphon\\score\\innings::hometeampoints","icecave\\siphon\\score\\innings::awayteampoints","icecave\\siphon\\score\\innings::hometeamhits","icecave\\siphon\\score\\innings::awayteamhits","icecave\\siphon\\score\\innings::hometeamerrors","icecave\\siphon\\score\\innings::awayteamerrors","icecave\\siphon\\score\\inningsscore::hometeamhits","icecave\\siphon\\score\\inningsscore::awayteamhits","icecave\\siphon\\score\\inningsscore::hometeamerrors","icecave\\siphon\\score\\inningsscore::awayteamerrors","icecave\\siphon\\score\\inningsscore::scopeclass","icecave\\siphon\\score\\inningsstatisticsinterface::hometeamhits","icecave\\siphon\\score\\inningsstatisticsinterface::awayteamhits","icecave\\siphon\\score\\inningsstatisticsinterface::hometeamerrors","icecave\\siphon\\score\\inningsstatisticsinterface::awayteamerrors","icecave\\siphon\\score\\livescore\\gametimeinterface::gametime","icecave\\siphon\\score\\livescore\\gametimeinterface::setgametime","icecave\\siphon\\score\\livescore\\inningslivescore::currentinningstype","icecave\\siphon\\score\\livescore\\inningslivescore::setcurrentinningstype","icecave\\siphon\\score\\livescore\\inningslivescorefactory::__construct","icecave\\siphon\\score\\livescore\\inningslivescorefactory::supports","icecave\\siphon\\score\\livescore\\inningslivescorefactory::create","icecave\\siphon\\score\\livescore\\livescorefactoryinterface::supports","icecave\\siphon\\score\\livescore\\livescorefactoryinterface::create","icecave\\siphon\\score\\livescore\\livescoreinterface::currentscope","icecave\\siphon\\score\\livescore\\livescorereader::__construct","icecave\\siphon\\score\\livescore\\livescorereader::read","icecave\\siphon\\score\\livescore\\periodlivescore::gametime","icecave\\siphon\\score\\livescore\\periodlivescore::setgametime","icecave\\siphon\\score\\livescore\\periodlivescorefactory::__construct","icecave\\siphon\\score\\livescore\\periodlivescorefactory::supports","icecave\\siphon\\score\\livescore\\periodlivescorefactory::create","icecave\\siphon\\score\\livescore\\statisticsaggregator::extract","icecave\\siphon\\score\\livescore\\statisticsaggregatorinterface::extract","icecave\\siphon\\score\\period::__construct","icecave\\siphon\\score\\period::status","icecave\\siphon\\score\\period::setstatus","icecave\\siphon\\score\\period::type","icecave\\siphon\\score\\period::settype","icecave\\siphon\\score\\period::hometeampoints","icecave\\siphon\\score\\period::awayteampoints","icecave\\siphon\\score\\periodscore::scopeclass","icecave\\siphon\\score\\scopeinterface::status","icecave\\siphon\\score\\scopeinterface::setstatus","icecave\\siphon\\score\\scopeinterface::hometeampoints","icecave\\siphon\\score\\scopeinterface::awayteampoints","icecave\\siphon\\score\\scoreinterface::competitionstatus","icecave\\siphon\\score\\scoreinterface::hometeamscore","icecave\\siphon\\score\\scoreinterface::awayteamscore","icecave\\siphon\\score\\scoreinterface::add","icecave\\siphon\\score\\scoreinterface::scopes","icecave\\siphon\\score\\scoreinterface::scopeclass","icecave\\siphon\\score\\scorereaderinterface::read","icecave\\siphon\\team\\team::__construct","icecave\\siphon\\team\\team::id","icecave\\siphon\\team\\team::name","icecave\\siphon\\team\\team::nickname","icecave\\siphon\\team\\team::abbreviation","icecave\\siphon\\team\\team::displayname","icecave\\siphon\\team\\teamreader::__construct","icecave\\siphon\\team\\teamreader::read","icecave\\siphon\\team\\teamreaderinterface::read","icecave\\siphon\\urlbuilder::__construct","icecave\\siphon\\urlbuilder::build","icecave\\siphon\\urlbuilder::extract","icecave\\siphon\\urlbuilderinterface::build","icecave\\siphon\\urlbuilderinterface::extract","icecave\\siphon\\xmlreader::__construct","icecave\\siphon\\xmlreader::read","icecave\\siphon\\xmlreaderinterface::read"],
        'info': [["Icecave","","Icecave.html","","",3],["Icecave\\Siphon","","Icecave\/Siphon.html","","",3],["Icecave\\Siphon\\Atom","","Icecave\/Siphon\/Atom.html","","",3],["Icecave\\Siphon\\Exception","","Icecave\/Siphon\/Exception.html","","",3],["Icecave\\Siphon\\Schedule","","Icecave\/Siphon\/Schedule.html","","",3],["Icecave\\Siphon\\Score","","Icecave\/Siphon\/Score.html","","",3],["Icecave\\Siphon\\Score\\LiveScore","","Icecave\/Siphon\/Score\/LiveScore.html","","",3],["Icecave\\Siphon\\Team","","Icecave\/Siphon\/Team.html","","",3],["AtomEntry","Icecave\\Siphon\\Atom","Icecave\/Siphon\/Atom\/AtomEntry.html","","A single result from an Atom feed.",1],["AtomReader","Icecave\\Siphon\\Atom","Icecave\/Siphon\/Atom\/AtomReader.html","","Read and parse atom feeds.",1],["AtomReaderInterface","Icecave\\Siphon\\Atom","Icecave\/Siphon\/Atom\/AtomReaderInterface.html","","Read and parse atom feeds.",1],["AtomResult","Icecave\\Siphon\\Atom","Icecave\/Siphon\/Atom\/AtomResult.html","","A collection of results from an Atom feed.",1],["ServiceUnavailableException","Icecave\\Siphon\\Exception","Icecave\/Siphon\/Exception\/ServiceUnavailableException.html"," < RuntimeException","",1],["PackageInfo","Icecave\\Siphon","Icecave\/Siphon\/PackageInfo.html","","",1],["Competition","Icecave\\Siphon\\Schedule","Icecave\/Siphon\/Schedule\/Competition.html","","A sports competition (ie, \"event\" \/ \"game\" \/ \"match\"",1],["CompetitionStatus","Icecave\\Siphon\\Schedule","Icecave\/Siphon\/Schedule\/CompetitionStatus.html"," < AbstractEnumeration","",1],["Schedule","Icecave\\Siphon\\Schedule","Icecave\/Siphon\/Schedule\/Schedule.html","","A sporting schedule.",1],["ScheduleReader","Icecave\\Siphon\\Schedule","Icecave\/Siphon\/Schedule\/ScheduleReader.html","","Client for reading schedule feeds.",1],["ScheduleReaderInterface","Icecave\\Siphon\\Schedule","Icecave\/Siphon\/Schedule\/ScheduleReaderInterface.html","","Client for reading schedule feeds.",1],["Season","Icecave\\Siphon\\Schedule","Icecave\/Siphon\/Schedule\/Season.html","","A sporting season.",1],["Innings","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/Innings.html","","An innings.",1],["InningsScore","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/InningsScore.html","","Score for innings-based sports.",1],["InningsStatisticsInterface","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/InningsStatisticsInterface.html","","Additional statistics for innings-based sports.",1],["InningsType","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/InningsType.html"," < AbstractEnumeration","The innings sub-type.",1],["GameTimeInterface","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/GameTimeInterface.html","","Live-score interface for games that use a game clock.",1],["InningsLiveScore","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/InningsLiveScore.html"," < InningsScore","Live score for innings-based sports.",1],["InningsLiveScoreFactory","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/InningsLiveScoreFactory.html","","",1],["LiveScoreFactoryInterface","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/LiveScoreFactoryInterface.html","","A factory for live scores.",1],["LiveScoreInterface","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/LiveScoreInterface.html","","",1],["LiveScoreReader","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/LiveScoreReader.html","","Client for reading live score feeds.",1],["LiveScoreReaderInterface","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/LiveScoreReaderInterface.html","","Client for reading live score feeds.",1],["PeriodLiveScore","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/PeriodLiveScore.html"," < PeriodScore","Live scores for period based sports.",1],["PeriodLiveScoreFactory","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/PeriodLiveScoreFactory.html","","",1],["StatisticsAggregator","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/StatisticsAggregator.html","","",1],["StatisticsAggregatorInterface","Icecave\\Siphon\\Score\\LiveScore","Icecave\/Siphon\/Score\/LiveScore\/StatisticsAggregatorInterface.html","","",1],["Period","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/Period.html","","Period for team sports.",1],["PeriodScore","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/PeriodScore.html","","Scores for period based sports.",1],["PeriodType","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/PeriodType.html"," < AbstractEnumeration","",1],["ScopeInterface","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/ScopeInterface.html","","",1],["ScopeStatus","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/ScopeStatus.html"," < AbstractEnumeration","",1],["ScoreInterface","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/ScoreInterface.html","","",1],["ScoreReaderInterface","Icecave\\Siphon\\Score","Icecave\/Siphon\/Score\/ScoreReaderInterface.html","","Client for reading score feeds.",1],["Team","Icecave\\Siphon\\Team","Icecave\/Siphon\/Team\/Team.html","","Represents a team in a team sport.",1],["TeamReader","Icecave\\Siphon\\Team","Icecave\/Siphon\/Team\/TeamReader.html","","Client for reading team feeds.",1],["TeamReaderInterface","Icecave\\Siphon\\Team","Icecave\/Siphon\/Team\/TeamReaderInterface.html","","Client for reading team feeds.",1],["UrlBuilder","Icecave\\Siphon","Icecave\/Siphon\/UrlBuilder.html","","Constructs a fully-qualified feed URL from a resource",1],["UrlBuilderInterface","Icecave\\Siphon","Icecave\/Siphon\/UrlBuilderInterface.html","","Constructs a fully-qualified feed URL from a resource",1],["XmlReader","Icecave\\Siphon","Icecave\/Siphon\/XmlReader.html","","Reads XML from a feed.",1],["XmlReaderInterface","Icecave\\Siphon","Icecave\/Siphon\/XmlReaderInterface.html","","Reads XML from a feed.",1],["AtomEntry::__construct","Icecave\\Siphon\\Atom\\AtomEntry","Icecave\/Siphon\/Atom\/AtomEntry.html#method___construct","(string $url, <abbr title=\"Icecave\\Chrono\\DateTime\">DateTime<\/abbr> $updatedTime)","",2],["AtomEntry::url","Icecave\\Siphon\\Atom\\AtomEntry","Icecave\/Siphon\/Atom\/AtomEntry.html#method_url","()","",2],["AtomEntry::updatedTime","Icecave\\Siphon\\Atom\\AtomEntry","Icecave\/Siphon\/Atom\/AtomEntry.html#method_updatedTime","()","",2],["AtomReader::__construct","Icecave\\Siphon\\Atom\\AtomReader","Icecave\/Siphon\/Atom\/AtomReader.html#method___construct","(<a href=\"Icecave\/Siphon\/XmlReaderInterface.html\"><abbr title=\"Icecave\\Siphon\\XmlReaderInterface\">XmlReaderInterface<\/abbr><\/a> $xmlReader)","",2],["AtomReader::read","Icecave\\Siphon\\Atom\\AtomReader","Icecave\/Siphon\/Atom\/AtomReader.html#method_read","(<abbr title=\"Icecave\\Chrono\\DateTime\">DateTime<\/abbr> $threshold, string|null $feed = null, integer $limit = 5000, integer $order = SORT_ASC)","Fetch a list of feeds that have been updated since",2],["AtomReaderInterface::read","Icecave\\Siphon\\Atom\\AtomReaderInterface","Icecave\/Siphon\/Atom\/AtomReaderInterface.html#method_read","(<abbr title=\"Icecave\\Chrono\\DateTime\">DateTime<\/abbr> $threshold, string|null $feed = null, integer $limit = 5000, integer $order = SORT_ASC)","Fetch a list of feeds that have been updated since",2],["AtomResult::__construct","Icecave\\Siphon\\Atom\\AtomResult","Icecave\/Siphon\/Atom\/AtomResult.html#method___construct","(<abbr title=\"Icecave\\Chrono\\DateTime\">DateTime<\/abbr> $updatedTime)","",2],["AtomResult::add","Icecave\\Siphon\\Atom\\AtomResult","Icecave\/Siphon\/Atom\/AtomResult.html#method_add","(<a href=\"Icecave\/Siphon\/Atom\/AtomEntry.html\"><abbr title=\"Icecave\\Siphon\\Atom\\AtomEntry\">AtomEntry<\/abbr><\/a> $entry)","Add an entry to the collection.",2],["AtomResult::isEmpty","Icecave\\Siphon\\Atom\\AtomResult","Icecave\/Siphon\/Atom\/AtomResult.html#method_isEmpty","()","Indicates whether or not the collection contains any",2],["AtomResult::count","Icecave\\Siphon\\Atom\\AtomResult","Icecave\/Siphon\/Atom\/AtomResult.html#method_count","()","Get the number of entries in the collection.",2],["AtomResult::getIterator","Icecave\\Siphon\\Atom\\AtomResult","Icecave\/Siphon\/Atom\/AtomResult.html#method_getIterator","()","Iterate over the entries.",2],["AtomResult::updatedTime","Icecave\\Siphon\\Atom\\AtomResult","Icecave\/Siphon\/Atom\/AtomResult.html#method_updatedTime","()","Get the time at which the atom result was produced.",2],["Competition::__construct","Icecave\\Siphon\\Schedule\\Competition","Icecave\/Siphon\/Schedule\/Competition.html#method___construct","(string $id, <a href=\"Icecave\/Siphon\/Schedule\/CompetitionStatus.html\"><abbr title=\"Icecave\\Siphon\\Schedule\\CompetitionStatus\">CompetitionStatus<\/abbr><\/a> $status, <abbr title=\"Icecave\\Chrono\\DateTime\">DateTime<\/abbr> $startTime, string $sport, string $league, string $homeTeamId, string $awayTeamId)","",2],["Competition::id","Icecave\\Siphon\\Schedule\\Competition","Icecave\/Siphon\/Schedule\/Competition.html#method_id","()","Get the competition ID.",2],["Competition::status","Icecave\\Siphon\\Schedule\\Competition","Icecave\/Siphon\/Schedule\/Competition.html#method_status","()","Get the competition status.",2],["Competition::startTime","Icecave\\Siphon\\Schedule\\Competition","Icecave\/Siphon\/Schedule\/Competition.html#method_startTime","()","Get the time at which the competition begins.",2],["Competition::sport","Icecave\\Siphon\\Schedule\\Competition","Icecave\/Siphon\/Schedule\/Competition.html#method_sport","()","Get the sport.",2],["Competition::league","Icecave\\Siphon\\Schedule\\Competition","Icecave\/Siphon\/Schedule\/Competition.html#method_league","()","Get the league.",2],["Competition::homeTeamId","Icecave\\Siphon\\Schedule\\Competition","Icecave\/Siphon\/Schedule\/Competition.html#method_homeTeamId","()","Get the ID of the home team.",2],["Competition::awayTeamId","Icecave\\Siphon\\Schedule\\Competition","Icecave\/Siphon\/Schedule\/Competition.html#method_awayTeamId","()","Get the ID of the away team.",2],["Schedule::add","Icecave\\Siphon\\Schedule\\Schedule","Icecave\/Siphon\/Schedule\/Schedule.html#method_add","(<a href=\"Icecave\/Siphon\/Schedule\/Season.html\"><abbr title=\"Icecave\\Siphon\\Schedule\\Season\">Season<\/abbr><\/a> $season)","Add a season to the schedule.",2],["Schedule::seasons","Icecave\\Siphon\\Schedule\\Schedule","Icecave\/Siphon\/Schedule\/Schedule.html#method_seasons","()","Get the seasons in the schedule.",2],["Schedule::competitions","Icecave\\Siphon\\Schedule\\Schedule","Icecave\/Siphon\/Schedule\/Schedule.html#method_competitions","()","Get the competitions in the schedule.",2],["ScheduleReader::__construct","Icecave\\Siphon\\Schedule\\ScheduleReader","Icecave\/Siphon\/Schedule\/ScheduleReader.html#method___construct","(<a href=\"Icecave\/Siphon\/XmlReaderInterface.html\"><abbr title=\"Icecave\\Siphon\\XmlReaderInterface\">XmlReaderInterface<\/abbr><\/a> $xmlReader)","",2],["ScheduleReader::read","Icecave\\Siphon\\Schedule\\ScheduleReader","Icecave\/Siphon\/Schedule\/ScheduleReader.html#method_read","(string $sport, string $league)","Read a schedule feed.",2],["ScheduleReaderInterface::read","Icecave\\Siphon\\Schedule\\ScheduleReaderInterface","Icecave\/Siphon\/Schedule\/ScheduleReaderInterface.html#method_read","(string $sport, string $league)","Read a schedule feed.",2],["Season::__construct","Icecave\\Siphon\\Schedule\\Season","Icecave\/Siphon\/Schedule\/Season.html#method___construct","(string $id, string $name, <abbr title=\"Icecave\\Chrono\\Date\">Date<\/abbr> $startDate, <abbr title=\"Icecave\\Chrono\\Date\">Date<\/abbr> $endDate)","",2],["Season::id","Icecave\\Siphon\\Schedule\\Season","Icecave\/Siphon\/Schedule\/Season.html#method_id","()","Get the season ID.",2],["Season::name","Icecave\\Siphon\\Schedule\\Season","Icecave\/Siphon\/Schedule\/Season.html#method_name","()","Get the season name.",2],["Season::startDate","Icecave\\Siphon\\Schedule\\Season","Icecave\/Siphon\/Schedule\/Season.html#method_startDate","()","Get the date on which the season starts.",2],["Season::endDate","Icecave\\Siphon\\Schedule\\Season","Icecave\/Siphon\/Schedule\/Season.html#method_endDate","()","Get the date on which the season ends.",2],["Season::add","Icecave\\Siphon\\Schedule\\Season","Icecave\/Siphon\/Schedule\/Season.html#method_add","(<a href=\"Icecave\/Siphon\/Schedule\/Competition.html\"><abbr title=\"Icecave\\Siphon\\Schedule\\Competition\">Competition<\/abbr><\/a> $competition)","Add a competition to the season.",2],["Season::competitions","Icecave\\Siphon\\Schedule\\Season","Icecave\/Siphon\/Schedule\/Season.html#method_competitions","()","Get the competitions in the season.",2],["Innings::__construct","Icecave\\Siphon\\Score\\Innings","Icecave\/Siphon\/Score\/Innings.html#method___construct","(integer $homeTeamPoints, integer $awayTeamPoints, integer $homeTeamHits, integer $awayTeamHits, integer $homeTeamErrors, integer $awayTeamErrors)","",2],["Innings::status","Icecave\\Siphon\\Score\\Innings","Icecave\/Siphon\/Score\/Innings.html#method_status","()","Get the status of the scope.",2],["Innings::setStatus","Icecave\\Siphon\\Score\\Innings","Icecave\/Siphon\/Score\/Innings.html#method_setStatus","(<a href=\"Icecave\/Siphon\/Score\/ScopeStatus.html\"><abbr title=\"Icecave\\Siphon\\Score\\ScopeStatus\">ScopeStatus<\/abbr><\/a> $status)","Set the status of the scope.",2],["Innings::homeTeamPoints","Icecave\\Siphon\\Score\\Innings","Icecave\/Siphon\/Score\/Innings.html#method_homeTeamPoints","()","Get the number of runs made by the home team.",2],["Innings::awayTeamPoints","Icecave\\Siphon\\Score\\Innings","Icecave\/Siphon\/Score\/Innings.html#method_awayTeamPoints","()","Get the number of runs made by the away team.",2],["Innings::homeTeamHits","Icecave\\Siphon\\Score\\Innings","Icecave\/Siphon\/Score\/Innings.html#method_homeTeamHits","()","Get the number of hits made by the home team.",2],["Innings::awayTeamHits","Icecave\\Siphon\\Score\\Innings","Icecave\/Siphon\/Score\/Innings.html#method_awayTeamHits","()","Get the number of hits made by the away team.",2],["Innings::homeTeamErrors","Icecave\\Siphon\\Score\\Innings","Icecave\/Siphon\/Score\/Innings.html#method_homeTeamErrors","()","Get the number of errors made by the home team.",2],["Innings::awayTeamErrors","Icecave\\Siphon\\Score\\Innings","Icecave\/Siphon\/Score\/Innings.html#method_awayTeamErrors","()","Get the number of errors made by the away team.",2],["InningsScore::homeTeamHits","Icecave\\Siphon\\Score\\InningsScore","Icecave\/Siphon\/Score\/InningsScore.html#method_homeTeamHits","()","Get the number of hits made by the home team.",2],["InningsScore::awayTeamHits","Icecave\\Siphon\\Score\\InningsScore","Icecave\/Siphon\/Score\/InningsScore.html#method_awayTeamHits","()","Get the number of hits made by the away team.",2],["InningsScore::homeTeamErrors","Icecave\\Siphon\\Score\\InningsScore","Icecave\/Siphon\/Score\/InningsScore.html#method_homeTeamErrors","()","Get the number of errors made by the home team.",2],["InningsScore::awayTeamErrors","Icecave\\Siphon\\Score\\InningsScore","Icecave\/Siphon\/Score\/InningsScore.html#method_awayTeamErrors","()","Get the number of errors made by the away team.",2],["InningsScore::scopeClass","Icecave\\Siphon\\Score\\InningsScore","Icecave\/Siphon\/Score\/InningsScore.html#method_scopeClass","()","Get the class name of the scope type used by this sport.",2],["InningsStatisticsInterface::homeTeamHits","Icecave\\Siphon\\Score\\InningsStatisticsInterface","Icecave\/Siphon\/Score\/InningsStatisticsInterface.html#method_homeTeamHits","()","Get the number of hits made by the home team.",2],["InningsStatisticsInterface::awayTeamHits","Icecave\\Siphon\\Score\\InningsStatisticsInterface","Icecave\/Siphon\/Score\/InningsStatisticsInterface.html#method_awayTeamHits","()","Get the number of hits made by the away team.",2],["InningsStatisticsInterface::homeTeamErrors","Icecave\\Siphon\\Score\\InningsStatisticsInterface","Icecave\/Siphon\/Score\/InningsStatisticsInterface.html#method_homeTeamErrors","()","Get the number of errors made by the home team.",2],["InningsStatisticsInterface::awayTeamErrors","Icecave\\Siphon\\Score\\InningsStatisticsInterface","Icecave\/Siphon\/Score\/InningsStatisticsInterface.html#method_awayTeamErrors","()","Get the number of errors made by the away team.",2],["GameTimeInterface::gameTime","Icecave\\Siphon\\Score\\LiveScore\\GameTimeInterface","Icecave\/Siphon\/Score\/LiveScore\/GameTimeInterface.html#method_gameTime","()","Get the current game time.",2],["GameTimeInterface::setGameTime","Icecave\\Siphon\\Score\\LiveScore\\GameTimeInterface","Icecave\/Siphon\/Score\/LiveScore\/GameTimeInterface.html#method_setGameTime","(<abbr title=\"Icecave\\Chrono\\TimeSpan\\Duration\">Duration<\/abbr> $gameTime = null)","Set the current game time.",2],["InningsLiveScore::currentInningsType","Icecave\\Siphon\\Score\\LiveScore\\InningsLiveScore","Icecave\/Siphon\/Score\/LiveScore\/InningsLiveScore.html#method_currentInningsType","()","Get the current innings type.",2],["InningsLiveScore::setCurrentInningsType","Icecave\\Siphon\\Score\\LiveScore\\InningsLiveScore","Icecave\/Siphon\/Score\/LiveScore\/InningsLiveScore.html#method_setCurrentInningsType","(<a href=\"Icecave\/Siphon\/Score\/InningsType.html\"><abbr title=\"Icecave\\Siphon\\Score\\InningsType\">InningsType<\/abbr><\/a> $type = null)","Set the current innings type.",2],["InningsLiveScoreFactory::__construct","Icecave\\Siphon\\Score\\LiveScore\\InningsLiveScoreFactory","Icecave\/Siphon\/Score\/LiveScore\/InningsLiveScoreFactory.html#method___construct","(<a href=\"Icecave\/Siphon\/Score\/LiveScore\/StatisticsAggregatorInterface.html\"><abbr title=\"Icecave\\Siphon\\Score\\LiveScore\\StatisticsAggregatorInterface\">StatisticsAggregatorInterface<\/abbr><\/a> $statisticsAggregator = null)","",2],["InningsLiveScoreFactory::supports","Icecave\\Siphon\\Score\\LiveScore\\InningsLiveScoreFactory","Icecave\/Siphon\/Score\/LiveScore\/InningsLiveScoreFactory.html#method_supports","(string $sport, string $league)","Check if this factory supports creation of live scores",2],["InningsLiveScoreFactory::create","Icecave\\Siphon\\Score\\LiveScore\\InningsLiveScoreFactory","Icecave\/Siphon\/Score\/LiveScore\/InningsLiveScoreFactory.html#method_create","(string $sport, string $league, <a href=\"http:\/\/php.net\/SimpleXMLElement\"><abbr title=\"SimpleXMLElement\">SimpleXMLElement<\/abbr><\/a> $xml)","Create a live score for the given competition.",2],["LiveScoreFactoryInterface::supports","Icecave\\Siphon\\Score\\LiveScore\\LiveScoreFactoryInterface","Icecave\/Siphon\/Score\/LiveScore\/LiveScoreFactoryInterface.html#method_supports","(string $sport, string $league)","Check if this factory supports creation of live scores",2],["LiveScoreFactoryInterface::create","Icecave\\Siphon\\Score\\LiveScore\\LiveScoreFactoryInterface","Icecave\/Siphon\/Score\/LiveScore\/LiveScoreFactoryInterface.html#method_create","(string $sport, string $league, <a href=\"http:\/\/php.net\/SimpleXMLElement\"><abbr title=\"SimpleXMLElement\">SimpleXMLElement<\/abbr><\/a> $xml)","Create a live score for the given competition.",2],["LiveScoreInterface::currentScope","Icecave\\Siphon\\Score\\LiveScore\\LiveScoreInterface","Icecave\/Siphon\/Score\/LiveScore\/LiveScoreInterface.html#method_currentScope","()","Get the current scope.",2],["LiveScoreReader::__construct","Icecave\\Siphon\\Score\\LiveScore\\LiveScoreReader","Icecave\/Siphon\/Score\/LiveScore\/LiveScoreReader.html#method___construct","(<a href=\"Icecave\/Siphon\/XmlReaderInterface.html\"><abbr title=\"Icecave\\Siphon\\XmlReaderInterface\">XmlReaderInterface<\/abbr><\/a> $xmlReader, array $factories = null)","",2],["LiveScoreReader::read","Icecave\\Siphon\\Score\\LiveScore\\LiveScoreReader","Icecave\/Siphon\/Score\/LiveScore\/LiveScoreReader.html#method_read","(string $sport, string $league, string $competitionId)","Read a live score feed for a competition.",2],["PeriodLiveScore::gameTime","Icecave\\Siphon\\Score\\LiveScore\\PeriodLiveScore","Icecave\/Siphon\/Score\/LiveScore\/PeriodLiveScore.html#method_gameTime","()","Get the current game time.",2],["PeriodLiveScore::setGameTime","Icecave\\Siphon\\Score\\LiveScore\\PeriodLiveScore","Icecave\/Siphon\/Score\/LiveScore\/PeriodLiveScore.html#method_setGameTime","(<abbr title=\"Icecave\\Chrono\\TimeSpan\\Duration\">Duration<\/abbr> $gameTime = null)","Set the current game time.",2],["PeriodLiveScoreFactory::__construct","Icecave\\Siphon\\Score\\LiveScore\\PeriodLiveScoreFactory","Icecave\/Siphon\/Score\/LiveScore\/PeriodLiveScoreFactory.html#method___construct","(<a href=\"Icecave\/Siphon\/Score\/LiveScore\/StatisticsAggregatorInterface.html\"><abbr title=\"Icecave\\Siphon\\Score\\LiveScore\\StatisticsAggregatorInterface\">StatisticsAggregatorInterface<\/abbr><\/a> $statisticsAggregator = null)","",2],["PeriodLiveScoreFactory::supports","Icecave\\Siphon\\Score\\LiveScore\\PeriodLiveScoreFactory","Icecave\/Siphon\/Score\/LiveScore\/PeriodLiveScoreFactory.html#method_supports","(string $sport, string $league)","Check if this factory supports creation of live scores",2],["PeriodLiveScoreFactory::create","Icecave\\Siphon\\Score\\LiveScore\\PeriodLiveScoreFactory","Icecave\/Siphon\/Score\/LiveScore\/PeriodLiveScoreFactory.html#method_create","(string $sport, string $league, <a href=\"http:\/\/php.net\/SimpleXMLElement\"><abbr title=\"SimpleXMLElement\">SimpleXMLElement<\/abbr><\/a> $xml)","Create a live score for the given competition.",2],["StatisticsAggregator::extract","Icecave\\Siphon\\Score\\LiveScore\\StatisticsAggregator","Icecave\/Siphon\/Score\/LiveScore\/StatisticsAggregator.html#method_extract","(<a href=\"http:\/\/php.net\/SimpleXMLElement\"><abbr title=\"SimpleXMLElement\">SimpleXMLElement<\/abbr><\/a> $xml)","Extract statistics from the given live score XML.",2],["StatisticsAggregatorInterface::extract","Icecave\\Siphon\\Score\\LiveScore\\StatisticsAggregatorInterface","Icecave\/Siphon\/Score\/LiveScore\/StatisticsAggregatorInterface.html#method_extract","(<a href=\"http:\/\/php.net\/SimpleXMLElement\"><abbr title=\"SimpleXMLElement\">SimpleXMLElement<\/abbr><\/a> $xml)","Extract statistics from the given live score XML.",2],["Period::__construct","Icecave\\Siphon\\Score\\Period","Icecave\/Siphon\/Score\/Period.html#method___construct","(integer $homeTeamPoints, integer $awayTeamPoints)","",2],["Period::status","Icecave\\Siphon\\Score\\Period","Icecave\/Siphon\/Score\/Period.html#method_status","()","Get the status of the scope.",2],["Period::setStatus","Icecave\\Siphon\\Score\\Period","Icecave\/Siphon\/Score\/Period.html#method_setStatus","(<a href=\"Icecave\/Siphon\/Score\/ScopeStatus.html\"><abbr title=\"Icecave\\Siphon\\Score\\ScopeStatus\">ScopeStatus<\/abbr><\/a> $status)","Set the status of the scope.",2],["Period::type","Icecave\\Siphon\\Score\\Period","Icecave\/Siphon\/Score\/Period.html#method_type","()","Get the type of the period.",2],["Period::setType","Icecave\\Siphon\\Score\\Period","Icecave\/Siphon\/Score\/Period.html#method_setType","(<a href=\"Icecave\/Siphon\/Score\/PeriodType.html\"><abbr title=\"Icecave\\Siphon\\Score\\PeriodType\">PeriodType<\/abbr><\/a> $type)","Set the type of the period.",2],["Period::homeTeamPoints","Icecave\\Siphon\\Score\\Period","Icecave\/Siphon\/Score\/Period.html#method_homeTeamPoints","()","Get the number of runs made by the home team.",2],["Period::awayTeamPoints","Icecave\\Siphon\\Score\\Period","Icecave\/Siphon\/Score\/Period.html#method_awayTeamPoints","()","Get the number of points made by the away team.",2],["PeriodScore::scopeClass","Icecave\\Siphon\\Score\\PeriodScore","Icecave\/Siphon\/Score\/PeriodScore.html#method_scopeClass","()","Get the class name of the scope type used by this sport.",2],["ScopeInterface::status","Icecave\\Siphon\\Score\\ScopeInterface","Icecave\/Siphon\/Score\/ScopeInterface.html#method_status","()","Get the status of the scope.",2],["ScopeInterface::setStatus","Icecave\\Siphon\\Score\\ScopeInterface","Icecave\/Siphon\/Score\/ScopeInterface.html#method_setStatus","(<a href=\"Icecave\/Siphon\/Score\/ScopeStatus.html\"><abbr title=\"Icecave\\Siphon\\Score\\ScopeStatus\">ScopeStatus<\/abbr><\/a> $status)","Set the status of the scope.",2],["ScopeInterface::homeTeamPoints","Icecave\\Siphon\\Score\\ScopeInterface","Icecave\/Siphon\/Score\/ScopeInterface.html#method_homeTeamPoints","()","The \"points\" earned by the home team.",2],["ScopeInterface::awayTeamPoints","Icecave\\Siphon\\Score\\ScopeInterface","Icecave\/Siphon\/Score\/ScopeInterface.html#method_awayTeamPoints","()","The \"points\" earned by the away team.",2],["ScoreInterface::competitionStatus","Icecave\\Siphon\\Score\\ScoreInterface","Icecave\/Siphon\/Score\/ScoreInterface.html#method_competitionStatus","()","Get the competition status.",2],["ScoreInterface::homeTeamScore","Icecave\\Siphon\\Score\\ScoreInterface","Icecave\/Siphon\/Score\/ScoreInterface.html#method_homeTeamScore","()","The home team's total score.",2],["ScoreInterface::awayTeamScore","Icecave\\Siphon\\Score\\ScoreInterface","Icecave\/Siphon\/Score\/ScoreInterface.html#method_awayTeamScore","()","The away team's total score.",2],["ScoreInterface::add","Icecave\\Siphon\\Score\\ScoreInterface","Icecave\/Siphon\/Score\/ScoreInterface.html#method_add","(<a href=\"Icecave\/Siphon\/Score\/ScopeInterface.html\"><abbr title=\"Icecave\\Siphon\\Score\\ScopeInterface\">ScopeInterface<\/abbr><\/a> $scope)","Add a scope.",2],["ScoreInterface::scopes","Icecave\\Siphon\\Score\\ScoreInterface","Icecave\/Siphon\/Score\/ScoreInterface.html#method_scopes","()","Get the scopes that make up the score.",2],["ScoreInterface::scopeClass","Icecave\\Siphon\\Score\\ScoreInterface","Icecave\/Siphon\/Score\/ScoreInterface.html#method_scopeClass","()","Get the class name of the scope type used by this sport.",2],["ScoreReaderInterface::read","Icecave\\Siphon\\Score\\ScoreReaderInterface","Icecave\/Siphon\/Score\/ScoreReaderInterface.html#method_read","(string $sport, string $league, string $competitionId)","Read a score feed for a competition.",2],["Team::__construct","Icecave\\Siphon\\Team\\Team","Icecave\/Siphon\/Team\/Team.html#method___construct","(string $id, string $name, string|null $nickname, string $abbreviation)","",2],["Team::id","Icecave\\Siphon\\Team\\Team","Icecave\/Siphon\/Team\/Team.html#method_id","()","Get the team ID.",2],["Team::name","Icecave\\Siphon\\Team\\Team","Icecave\/Siphon\/Team\/Team.html#method_name","()","Get the team name.",2],["Team::nickname","Icecave\\Siphon\\Team\\Team","Icecave\/Siphon\/Team\/Team.html#method_nickname","()","Get the team nick name.",2],["Team::abbreviation","Icecave\\Siphon\\Team\\Team","Icecave\/Siphon\/Team\/Team.html#method_abbreviation","()","Get the team short name.",2],["Team::displayName","Icecave\\Siphon\\Team\\Team","Icecave\/Siphon\/Team\/Team.html#method_displayName","()","Get the team display name.",2],["TeamReader::__construct","Icecave\\Siphon\\Team\\TeamReader","Icecave\/Siphon\/Team\/TeamReader.html#method___construct","(<a href=\"Icecave\/Siphon\/XmlReaderInterface.html\"><abbr title=\"Icecave\\Siphon\\XmlReaderInterface\">XmlReaderInterface<\/abbr><\/a> $xmlReader)","",2],["TeamReader::read","Icecave\\Siphon\\Team\\TeamReader","Icecave\/Siphon\/Team\/TeamReader.html#method_read","(string $sport, string $league, string $season)","Read a team feed.",2],["TeamReaderInterface::read","Icecave\\Siphon\\Team\\TeamReaderInterface","Icecave\/Siphon\/Team\/TeamReaderInterface.html#method_read","(string $sport, string $league, string $season)","Read a team feed.",2],["UrlBuilder::__construct","Icecave\\Siphon\\UrlBuilder","Icecave\/Siphon\/UrlBuilder.html#method___construct","(string $apiKey, string $base = &#039;http:\/\/xml.sportsdirectinc.com&#039;)","",2],["UrlBuilder::build","Icecave\\Siphon\\UrlBuilder","Icecave\/Siphon\/UrlBuilder.html#method_build","(string $resource, array $parameters = array())","Build a feed URL.",2],["UrlBuilder::extract","Icecave\\Siphon\\UrlBuilder","Icecave\/Siphon\/UrlBuilder.html#method_extract","(string $url)","Extract the resource and parameters from a fully-qualified",2],["UrlBuilderInterface::build","Icecave\\Siphon\\UrlBuilderInterface","Icecave\/Siphon\/UrlBuilderInterface.html#method_build","(string $resource, array $parameters)","Build a feed URL.",2],["UrlBuilderInterface::extract","Icecave\\Siphon\\UrlBuilderInterface","Icecave\/Siphon\/UrlBuilderInterface.html#method_extract","(string $url)","Extract the resource and parameters from a fully-qualified",2],["XmlReader::__construct","Icecave\\Siphon\\XmlReader","Icecave\/Siphon\/XmlReader.html#method___construct","(<a href=\"Icecave\/Siphon\/UrlBuilderInterface.html\"><abbr title=\"Icecave\\Siphon\\UrlBuilderInterface\">UrlBuilderInterface<\/abbr><\/a> $urlBuilder, <abbr title=\"GuzzleHttp\\ClientInterface\">ClientInterface<\/abbr> $httpClient)","",2],["XmlReader::read","Icecave\\Siphon\\XmlReader","Icecave\/Siphon\/XmlReader.html#method_read","(string $resource, array $parameters = array())","Fetch XML data from a feed.",2],["XmlReaderInterface::read","Icecave\\Siphon\\XmlReaderInterface","Icecave\/Siphon\/XmlReaderInterface.html#method_read","(string $resource, array $parameters = array())","Fetch XML data from a feed.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']